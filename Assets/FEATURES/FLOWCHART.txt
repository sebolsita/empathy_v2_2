### GAME STRUCTURE & SCRIPT CONNECTIONS ###

==========================================
1. Core Game Flow
==========================================

[GameManager]  
     │  
     ├──> Controls Scene Changes & State Transitions  
     │  
     ├──> Calls → [OnboardingController] (if game starts)  
     │  
     ├──> Calls → [Scenario1Controller] (if onboarding complete)  
     │  
     ├──> Calls → [Scenario2Controller] (after Scenario1 finishes)  
     │  
     ├──> Calls → [SurveyController] (if scenarios complete)  
     │  
     ├──> Calls → [CreditsController] (after survey)  
     │  
     ├──> Calls → [Paused] (if player pauses)  

==========================================
2. Scenario Controllers (Trigger Events & NPC Spawning)
==========================================

[Scenario1Controller]  
     │  
     ├──> Spawns → [NPCDoctorController]  
     │  
     ├──> Calls → [TextCanvasController] (to display doctor's lines)  
     │  
     ├──> Calls → [AnswersCanvasController] (to present player choices)  
     │  
     ├──> Calls → [SaveManager] (after player finishes)  
     │  
     ├──> Calls → [Scenario2Controller] (if scenario complete)  

[Scenario2Controller]  
     │  
     ├──> Spawns → [NPCInterpreterController]  
     │  
     ├──> Calls → [TextCanvasController] (to display interpreter's lines)  
     │  
     ├──> Calls → [AnswersCanvasController] (to present player choices)  
     │  
     ├──> Calls → [SaveManager] (after player finishes)  
     │  
     ├──> Calls → [SurveyController] (if scenario complete)  

==========================================
3. NPC Controllers (Handle Dialogue & Animation)
==========================================

[NPCDoctorController]  
     │  
     ├──> Fetches audio → [doctor_1.mp3, doctor_2.mp3]  
     │  
     ├──> Sends text → [TextCanvasController]  
     │  
     ├──> Plays animation → [StartTalking(), StopTalking()]  
     │  
     ├──> Waits for player response → Calls [Scenario1Controller]  

[NPCInterpreterController]  
     │  
     ├──> Fetches audio → [interpreter_1.mp3, interpreter_2.mp3]  
     │  
     ├──> Sends text → [TextCanvasController]  
     │  
     ├──> Triggers signing animation  
     │  
     ├──> Waits for player response → Calls [Scenario2Controller]  

[CrowdNPC1Controller] & [CrowdNPC2Controller]  
     │  
     ├──> Runs idle animations & ambient reactions  

==========================================
4. UI & Interaction System
==========================================

[TextCanvasController]  
     │  
     ├──> Receives text from → [NPCDoctorController] & [NPCInterpreterController]  
     │  
     ├──> Displays text → Player UI  
     │  
     ├──> Calls → [WordShifter] (if player is looking at NPC)  

[AnswersCanvasController]  
     │  
     ├──> Displays player choices  
     │  
     ├──> Waits for player input  
     │  
     ├──> Sends choice to → [Scenario Controllers]  

[WordShifter]  
     │  
     ├──> Detects player gaze on NPC  
     │  
     ├──> Modifies text dynamically (if looking at NPC, text is clearer)  

==========================================
5. Save & Load System
==========================================

[SaveManager]  
     │  
     ├──> Saves player progress (scenario completion, answers)  
     │  
     ├──> Loads progress when game starts  
     │  
     ├──> Called by → [Scenario1Controller], [Scenario2Controller]  

==========================================
FULL GAME FLOW EXAMPLE:
==========================================

1️⃣ GameManager →  
2️⃣ Scenario1Controller →  
3️⃣ NPCDoctorController →  
4️⃣ TextCanvasController →  
5️⃣ AnswersCanvasController →  
6️⃣ Scenario1Controller →  
7️⃣ SaveManager →  
8️⃣ Scenario2Controller (repeat flow for next stage)  

==========================================
NEXT STEPS:
==========================================

1. Finalize GameManager with correct state triggers.  
2. Implement Scenario1Controller to test the flow.  
3. Ensure NPCs auto-load text & audio correctly.  
4. Test UI response (TextCanvasController & AnswersCanvasController).  
5. Validate save/load functionality.  

---

This file can be copied directly into any documentation or planning tool. Let me know if you need edits!
